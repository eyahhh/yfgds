-- Variável para controlar o estado do Fly
local flyAtivado = false

-- Função para ativar ou desativar o Fly
local function toggleFly()
    flyAtivado = not flyAtivado
    if flyAtivado then
        print("Fly ativado!")
        loadstring(game:HttpGet('https://pastebin.com/raw/YSL3xKYU'))() -- Carregar o script do "Fly v3"
    else
        print("Fly desativado!")
        -- Adicione aqui o código para desativar o Fly, se necessário
    end
end

-- Criar a GUI
local Library = _G.Library
local Window = Library.CreateLib("Lightz HUB", "DarkTheme")
local Tab = Window:NewTab("Configurações")
local Section = Tab:NewSection("Opções")

-- Criar botão "Fly" na GUI
local flyButton = Section:NewButton("Fly v3", "Ativa ou desativa o Fly", toggleFly)

-- Adicionar funcionalidade de arrastar a GUI
local UIS = game:GetService("UserInputService")
local gui = script.Parent -- A GUI será movida pelo seu pai, ou seja, o objeto que contém este script

local dragging
local dragInput
local dragStart
local startPos

local function updateInput(input)
    local delta = input.Position - dragStart
    local guiPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    gui.Position = guiPos
end

gui.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = gui.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

gui.InputChanged:Connect(function(input)
    if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) and dragging then
        dragInput = input
    end
end)

UIS.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)